@prefix dbpedia:  <http://dbpedia.org/ontology/> .
@prefix resource: <http://dbpedia.org/resource/> .
@prefix lex: <http://github.com/cunger/lemon.dbpedia/target/dbpedia_en#> .

Lexicon(<http://github.com/cunger/lemon.dbpedia/target/dbpedia_en_8#>,"en",

  //// Classes

  ClassNoun("Person",dbpedia:Person),
  ClassNoun("Frau",lex:Female) with plural "Frauen",
  ClassNoun("Mann",lex:Male) with plural "Männer",
  ClassNoun(["ethnischer"/adjective "Gruppe"/noun],dbpedia:EthnicGroup),

  ClassNoun("Namen",<http://dbpedia.org/ontology/Name>),
  ClassNoun(["bestimmten"/noun "Namen"/noun],dbpedia:GivenName),
  ClassNoun(["ersten"/noun "Namen"/noun],dbpedia:GivenName),
  ClassNoun("Vorname",dbpedia:Surname),
  ClassNoun(["letzte"/noun "Namen"/noun],dbpedia:Surname),

  // Occupations

  ClassNoun(["Karriere"/noun "Revier"/noun],dbpedia:CareerStation),

  ClassNoun("Wissenschaftler",dbpedia:Scientist),
  ClassNoun("Forschers",dbpedia:Scientist),
  ClassNoun("medician",dbpedia:Medician),
  ClassNoun("Professor",dbpedia:Professor),
  ClassNoun("Historiker",lex:Historian),
  ClassNoun("Apotheker",lex:Chemist),
  ClassNoun("Biologe",lex:Biologist),
  ClassNoun("Wirtschaftsberater mit",lex:Economist),
  ClassNoun("Ingenieur",dbpedia:Engineer),
  ClassNoun("Lehrer",lex:Teacher),
  ClassNoun("geradezu",lex:Revolutionary),
  ClassNoun("dichter",lex:Poet),
  ClassNoun("Surfer",lex:Surfer),
  ClassNoun("architect",dbpedia:Architect),
  ClassNoun("Journalist",dbpedia:Journalist),
  ClassNoun("Theorie",dbpedia:Philosopher),
  ClassNoun("Aristokrat",dbpedia:Aristocrat),
  ClassNoun("Koch",dbpedia:Chef),
  ClassNoun(["Pferd"/noun "Ausbildern"/noun],dbpedia:HorseTrainer),
  ClassNoun("Muster",dbpedia:Model),

  ClassNoun("prominenter",dbpedia:Celebrity),
  ClassNoun(["Schönheit"/noun "Königin"/noun],dbpedia:BeautyQueen),

  // Nationalities

  ClassNoun("russischer",lex:Russian),
  IntersectiveAdjective("russischer",lex:Russian),
  ClassNoun("chinesischer",lex:Chinese),
  IntersectiveAdjective("chinesischer",lex:Chinese),
  ClassNoun("amerikanischen südamerikanischen",lex:USAmerican),
  IntersectiveAdjective("USAmerican",lex:USAmerican),
  ClassNoun("südamerikanischen",lex:American),
  IntersectiveAdjective("südamerikanischen",lex:American),
  IntersectiveAdjective("Briten",lex:British),
  IntersectiveAdjective("Englisch",lex:English),
  IntersectiveAdjective("irischen",lex:Irish),
  IntersectiveAdjective("japanischer",lex:Japanese),
  ClassNoun("inder",lex:Indian),
  IntersectiveAdjective("inder",lex:Indian),
  ClassNoun("deutscher",lex:German),
  IntersectiveAdjective("deutscher",lex:German),
  ClassNoun("Französisch",lex:French),
  IntersectiveAdjective("Französisch",lex:French),
  ClassNoun("kanadischer",lex:Canadian),
  IntersectiveAdjective("kanadischer",lex:Canadian),
  ClassNoun("Italiener",lex:Italian),
  IntersectiveAdjective("Italiener",lex:Italian),
  ClassNoun("Belgian",lex:Belgian),
  IntersectiveAdjective("Belgian",lex:Belgian),
  ClassNoun("Pole",lex:Polish),
  IntersectiveAdjective("polnischer",lex:Polish),
  ClassNoun("niederländischen",lex:Dutch),
  IntersectiveAdjective("niederländischen",lex:Dutch),

  // Ethnicities

  ClassNoun("Juden",lex:Jew),
  IntersectiveAdjective("jüdische",lex:Jew),
  ClassNoun(["afrikanischen"/adjective "südamerikanischen"/adjective],lex:AfricanAmerican),
  IntersectiveAdjective(["afrikanischen"/adjective "südamerikanischen"/adjective],lex:AfricanAmerican),

  // Religion 

  ClassNoun("religiöse",dbpedia:Religious),

  ClassNoun("Christian",lex:Christian),
  IntersectiveAdjective("Christian",lex:Christian),
  ClassNoun("Protestantin",lex:Protestant),
  IntersectiveAdjective("Protestantin",lex:Protestant),
  ClassNoun("Nein",lex:Catholic),
  IntersectiveAdjective("Nein",lex:Catholic),
  ClassNoun("Hindus",lex:Hindu) with plural "Hindi",
  IntersectiveAdjective("Hindus",lex:Hindu),
  ClassNoun("Muslim",lex:Muslim),
  IntersectiveAdjective("Muslim",lex:Muslim),
  ClassNoun("buddhistischen",lex:Buddhist),
  IntersectiveAdjective("buddhistischen",lex:Buddhist),

  ClassNoun(["Christian"/adjective "Bischof"/noun],dbpedia:ChristianBishop),
  ClassNoun("Bischof",dbpedia:ChristianBishop),
  ClassNoun(["Christian"/adjective "Anführer"/noun],dbpedia:ChristianPatriarch),
  ClassNoun("Anführer",dbpedia:ChristianPatriarch),
  ClassNoun("cleric",dbpedia:Cleric),
  ClassNoun("entspricht",dbpedia:Cleric),
  ClassNoun("Heiliger",dbpedia:Saint),
  ClassNoun("Kardinal",dbpedia:Cardinal),
  ClassNoun("Papst",dbpedia:Pope),
  ClassNoun("Pfarrer",dbpedia:Priest),


  //// Properties

  // birthDate, birthYear, birthPlace, stateOfOrigin

  RelationalNoun(["Geburtsort"/noun "date"/noun],dbpedia:birthDate,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  
  RelationalNoun(["date"/noun "von"/preposition "Geburtsort"/noun],dbpedia:birthDate,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "Zeitpunkten der Geburtsort",
    
  ConsequenceVerb("Bär",dbpedia:birthDate,
     propSubj = lex:child as Subject, 
     propObj  = lex:date as PrepositionalObject("auf")),

  ConsequenceVerb("Bär",dbpedia:birthYear,
     propSubj = lex:child as Subject, 
     propObj  = lex:year as PrepositionalObject("in")),
  ConsequenceVerb("Bär",dbpedia:birthPlace,
     propSubj = lex:child as Subject, 
     propObj  = lex:place as PrepositionalObject("in")),
  ConsequenceVerb("Bär",lex:birthCountry,
     propSubj = lex:child as Subject, 
     propObj  = lex:country as PrepositionalObject("in")),

  ConsequenceVerb("Bär",dbpedia:stateOfOrigin,
     propSubj = lex:child as Subject, 
     propObj  = lex:state as PrepositionalObject("in")),
  StateVerb("come",dbpedia:stateOfOrigin,
     propObj  = PrepositionalObject("von")),

  RelationalNoun(["Geburtsort"/noun "Ort"/noun],dbpedia:birthPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  
  RelationalNoun(["Ort"/noun "von"/preposition "Geburtsort"/noun],dbpedia:birthPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "Orte von Geburtsort",

  // deathDate, deathYear, deathPlace, restingPLace

  RelationalNoun(["Tod"/noun "date"/noun],dbpedia:deathDate,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  

  StateVerb("sterben",dbpedia:deathDate,
     propObj = PrepositionalObject("auf")),
  StateVerb("sterben",dbpedia:deathYear,
     propObj = PrepositionalObject("in")),
  StateVerb("sterben",dbpedia:deathPlace,
     propObj = PrepositionalObject("in")),

  RelationalNoun(["Tod"/noun "Ort"/noun],dbpedia:deathPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun(["Ort"/noun "von"/preposition "Tod"/noun],dbpedia:deathPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "Orte des Tod",

  RelationalNoun(["Stillegung"/noun "Ort"/noun],dbpedia:restingPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalAdjective("vergrabenen",dbpedia:restingPlace,
     relationalArg = PrepositionalObject("in")),

  // gender 

  IntersectiveObjectPropertyAdjective("weiblichen",dbpedia:gender,resource:Female),
  IntersectiveObjectPropertyAdjective("männlichen",dbpedia:gender,resource:Male),

  // relative, child, parent

  RelationalNoun("relativer",dbpedia:relative,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),
  RelationalAdjective("verbundenen",dbpedia:relative,
     relationalArg = PrepositionalObject("zu")), 

  RelationalNoun("Kind",dbpedia:child,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "Kinder", 
  RelationalNoun("Elternteil",dbpedia:child,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("Elternteil",dbpedia:parent,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun("Kind",dbpedia:parent,
     propObj  = PossessiveAdjunct) with plural "Kinder", 

  RelationalNoun("Tochter",dbpedia:child,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Female), 
  RelationalNoun("Tochter",dbpedia:parent,
     propSubj = CopulativeArg restrictedTo lex:Female,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("Sohn",dbpedia:child,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Male), 
  RelationalNoun("Sohn",dbpedia:parent,
     propSubj = CopulativeArg restrictedTo lex:Male,
     propObj  = PossessiveAdjunct), 

  RelationalNoun("Mutter",dbpedia:child,
     propSubj = CopulativeArg restrictedTo lex:Female,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("Mutter",dbpedia:parent,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Female), 
  RelationalNoun("Vater",dbpedia:child,
     propSubj = CopulativeArg restrictedTo lex:Male,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("Vater",dbpedia:parent,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Male), 

  RelationalNoun("Großmutter",lex:grandchild,
     propSubj = CopulativeArg restrictedTo lex:Female,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("Großvater",lex:grandchild,
     propSubj = CopulativeArg restrictedTo lex:Male,
     propObj  = PossessiveAdjunct), 

  RelationalNoun("Enkel",lex:grandchild,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "Enkeln", 
  RelationalNoun("Enkelin",lex:grandchild,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Female), 
  RelationalNoun("Enkel",lex:grandchild,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Male), 


  // spouse

  RelationalNoun("Ehegatte",dbpedia:spouse,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  
  RelationalNoun("Frau",dbpedia:spouse,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun("Mann",dbpedia:spouse,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("heiraten",dbpedia:spouse),

  ConsequenceVerb("heiraten",dbpedia:spouse,
     propSubj = lex:partner1 as Subject, 
     propObj  = lex:partner2 as PrepositionalObject("zu")),


  // influenced 

  StateVerb("Einfluss",dbpedia:influenced),
  StateVerb("Einfluss",dbpedia:influencedBy,
     propSubj = DirectObject,
     propObj  = Subject),


  // successor, predecessor

  RelationalNoun("Nachfolger",dbpedia:successor,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),
  StateVerb("gelingen",dbpedia:successor,
     propSubj = DirectObject,
     propObj  = Subject),
  StateVerb("preceed",dbpedia:successor),
  RelationalNoun("Vorgänger",dbpedia:successor,
     propObj = PossessiveAdjunct),

  RelationalNoun("Vorgänger",dbpedia:predecessor,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),
  StateVerb("preceed",dbpedia:predecessor,
     propSubj = DirectObject,
     propObj  = Subject),
  StateVerb("gelingen",dbpedia:predecessor),
  RelationalNoun("Nachfolger",dbpedia:predecessor,
     propObj = PossessiveAdjunct),


  // ethnicity, religion, related, populationPlace 

  RelationalNoun("ethnischen Zugehörigkeit",dbpedia:ethnicity,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),   

  RelationalNoun("Religion",dbpedia:religion,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),

  RelationalAdjective("verbundenen",dbpedia:related,
     relationalArg = PrepositionalObject("zu") restrictedTo dbpedia:EthnicGroup),

  StateVerb("leben",dbpedia:populationPlace,
     propObj = PrepositionalObject("in")),


  // university, almaMater, education

  RelationalNoun("Universität",dbpedia:university,
     propSubj=PossessiveAdjunct,
     propObj=CopulativeArg), 
  RelationalNoun(["Alma"/adjective "mater"/noun],dbpedia:almaMater,
     propSubj=PossessiveAdjunct,
     propObj=CopulativeArg),

  StateVerb("Study",dbpedia:university,
     propObj = PrepositionalObject("at")),
  StateVerb("Study",dbpedia:almaMater,
     propObj = PrepositionalObject("at")),
  StateVerb("Graduierten-",dbpedia:almaMater,
     propObj = PrepositionalObject("von")),

  StateVerb("beiwohnen",dbpedia:education,
     propObj  = DirectObject restrictedTo dbpedia:EducationalInstitution),
  StateVerb("Study",dbpedia:education,
     propObj  = PrepositionalObject("at") restrictedTo dbpedia:EducationalInstitution),
  StateVerb("gehen",dbpedia:education,
     propObj  = PrepositionalObject("zu") restrictedTo dbpedia:EducationalInstitution),


  // field 

  RelationalNoun("Feld",dbpedia:field,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("Arbeit",dbpedia:field,
     propObj = PrepositionalObject("auf")),


  // profession, occupation 

  RelationalNoun("Berufsstand",dbpedia:profession,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun("Beschäftigungsfragen",dbpedia:occupation,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("Arbeit",dbpedia:profession,
     propObj = PrepositionalObject("as")),
  StateVerb("Arbeit",dbpedia:occupation,
     propObj = PrepositionalObject("as")),


  // rector

  RelationalNoun("Rektor",dbpedia:rector,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun("principal",dbpedia:rector,
     propSubj = PossessiveAdjunct restrictedTo dbpedia:School,
     propObj  = CopulativeArg), 


  // canonizedPlace 

  ConsequenceVerb("canonize",dbpedia:canonizedPlace,
     propSubj=lex:person as Subject, 
     propObj=lex:place as PrepositionalObject("in")),

  // patron 

  RelationalNoun("Patron",dbpedia:patron,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun(["Patron"/noun "Heiliger"/noun],dbpedia:patron,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 


  // hometown, nationality 

  RelationalNoun(["Home"/noun "Stadt"/noun],dbpedia:hometown,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun(["Home"/noun "Land"/noun],dbpedia:nationality,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo dbpedia:Country ), 

  StateVerb("come",dbpedia:hometown,
     propObj = PrepositionalObject("von")),
  StateVerb("come",dbpedia:nationality,
     propObj = PrepositionalObject("von") restrictedTo dbpedia:Place),


  // birthName, formerName, commonName, pseudonym, alias

  RelationalNoun(["Geburtsort"/noun "Namen"/noun],dbpedia:birthName,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun(["ehemaligen"/adjective "Namen"/noun],dbpedia:formerName,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun(["gemeinsamen"/adjective "Namen"/noun],dbpedia:commonName,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun("Pseudonym",dbpedia:pseudonym,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),

  RelationalNoun("alias",dbpedia:alias,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),

  ConsequenceVerb("nennen",dbpedia:pseudonym,
     propSubj = lex:callee as Subject, 
     propObj  = lex:callname as DirectObject),
  ConsequenceVerb("nennen",dbpedia:alias,
     propSubj = lex:callee as Subject, 
     propObj  = lex:callname as DirectObject),
  ConsequenceVerb("nennen",dbpedia:commonName,
     propSubj = lex:callee as Subject, 
     propObj  = lex:callname as DirectObject),


  // weight 

  RelationalNoun("Gewicht",dbpedia:weight,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("wiegen",dbpedia:weight)

)
