@prefix dbpedia:  <http://dbpedia.org/ontology/> .
@prefix resource: <http://dbpedia.org/resource/> .
@prefix lex: <http://github.com/cunger/lemon.dbpedia/target/dbpedia_en#> .

Lexicon(<http://github.com/cunger/lemon.dbpedia/target/dbpedia_en_8#>,"en",

  //// Classes

  ClassNoun("person",dbpedia:Person),
  ClassNoun("woman",lex:Female) with plural "women",
  ClassNoun("man",lex:Male) with plural "men",
  ClassNoun(["ethnic"/adjective "group"/noun],dbpedia:EthnicGroup),

  ClassNoun("name",<http://dbpedia.org/ontology/Name>),
  ClassNoun(["given"/noun "name"/noun],dbpedia:GivenName),
  ClassNoun(["first"/noun "name"/noun],dbpedia:GivenName),
  ClassNoun("surname",dbpedia:Surname),
  ClassNoun(["last"/noun "name"/noun],dbpedia:Surname),

  // Occupations

  ClassNoun(["career"/noun "station"/noun],dbpedia:CareerStation),

  ClassNoun("scientist",dbpedia:Scientist),
  ClassNoun("researcher",dbpedia:Scientist),
  ClassNoun("medician",dbpedia:Medician),
  ClassNoun("professor",dbpedia:Professor),
  ClassNoun("historian",lex:Historian),
  ClassNoun("chemist",lex:Chemist),
  ClassNoun("biologist",lex:Biologist),
  ClassNoun("economist",lex:Economist),
  ClassNoun("engineer",dbpedia:Engineer),
  ClassNoun("teacher",lex:Teacher),
  ClassNoun("revolutionary",lex:Revolutionary),
  ClassNoun("poet",lex:Poet),
  ClassNoun("architect",dbpedia:Architect),
  ClassNoun("journalist",dbpedia:Journalist),
  ClassNoun("philosopher",dbpedia:Philosopher),
  ClassNoun("aristocrat",dbpedia:Aristocrat),
  ClassNoun("chef",dbpedia:Chef),
  ClassNoun(["horse"/noun "trainer"/noun],dbpedia:HorseTrainer),
  ClassNoun("model",dbpedia:Model),

  ClassNoun("celebrity",dbpedia:Celebrity),
  ClassNoun(["beauty"/noun "queen"/noun],dbpedia:BeautyQueen),

  // Nationalities

  ClassNoun("Russian",lex:Russian),
  IntersectiveAdjective("Russian",lex:Russian),
  ClassNoun("Chinese",lex:Chinese),
  IntersectiveAdjective("Chinese",lex:Chinese),
  ClassNoun("US American",lex:USAmerican),
  IntersectiveAdjective("USAmerican",lex:USAmerican),
  ClassNoun("American",lex:American),
  IntersectiveAdjective("American",lex:American),
  IntersectiveAdjective("British",lex:British),
  IntersectiveAdjective("English",lex:English),
  IntersectiveAdjective("Irish",lex:Irish),
  IntersectiveAdjective("Japanese",lex:Japanese),
  ClassNoun("Indian",lex:Indian),
  IntersectiveAdjective("Indian",lex:Indian),
  ClassNoun("German",lex:German),
  IntersectiveAdjective("German",lex:German),
  ClassNoun("French",lex:French),
  IntersectiveAdjective("French",lex:French),
  ClassNoun("Canadian",lex:Canadian),
  IntersectiveAdjective("Canadian",lex:Canadian),
  ClassNoun("Italian",lex:Italian),
  IntersectiveAdjective("Italian",lex:Italian),
  ClassNoun("Belgian",lex:Belgian),
  IntersectiveAdjective("Belgian",lex:Belgian),
  ClassNoun("Pole",lex:Polish),
  IntersectiveAdjective("Polish",lex:Polish),
  ClassNoun("Dutch",lex:Dutch),
  IntersectiveAdjective("Dutch",lex:Dutch),

  // Ethnicities

  ClassNoun("Jew",lex:Jew),
  IntersectiveAdjective("Jewish",lex:Jew),
  ClassNoun(["African"/adjective "American"/adjective],lex:AfricanAmerican),
  IntersectiveAdjective(["African"/adjective "American"/adjective],lex:AfricanAmerican),

  // Religion 

  ClassNoun("religious",dbpedia:Religious),

  ClassNoun("Christian",lex:Christian),
  IntersectiveAdjective("Christian",lex:Christian),
  ClassNoun("Protestant",lex:Protestant),
  IntersectiveAdjective("Protestant",lex:Protestant),
  ClassNoun("Catholic",lex:Catholic),
  IntersectiveAdjective("Catholic",lex:Catholic),
  ClassNoun("Hinduist",lex:Hinduist),
  IntersectiveAdjective("Hinduistic",lex:Hinduistic),
  ClassNoun("Muslim",lex:Muslim),
  ClassNoun("Islamist",lex:Islamist),
  IntersectiveAdjective("Islamistic",lex:Muslim),
  ClassNoun("Buddhist",lex:Buddhist),
  IntersectiveAdjective("Buddhist",lex:Buddhist),

  ClassNoun(["Christian"/adjective "bishop"/noun],dbpedia:ChristianBishop),
  ClassNoun("bishop",dbpedia:ChristianBishop),
  ClassNoun(["Christian"/adjective "patriarch"/noun],dbpedia:ChristianPatriarch),
  ClassNoun("patriarch",dbpedia:ChristianPatriarch),
  ClassNoun("cleric",dbpedia:Cleric),
  ClassNoun("clerk",dbpedia:Cleric),
  ClassNoun("saint",dbpedia:Saint),
  ClassNoun("cardinal",dbpedia:Cardinal),
  ClassNoun("pope",dbpedia:Pope),
  ClassNoun("priest",dbpedia:Priest),


  //// Properties

  // birthDate, birthYear, birthPlace, stateOfOrigin

  RelationalNoun(["birth"/noun "date"/noun],dbpedia:birthDate,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  
  RelationalNoun(["date"/noun "of"/preposition "birth"/noun],dbpedia:birthDate,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "dates of birth",
    
  ConsequenceVerb("bear",dbpedia:birthDate,
     propSubj = lex:child as Subject, 
     propObj  = lex:date as PrepositionalObject("on")),

  ConsequenceVerb("bear",dbpedia:birthYear,
     propSubj = lex:child as Subject, 
     propObj  = lex:year as PrepositionalObject("in")),
  ConsequenceVerb("bear",dbpedia:birthPlace,
     propSubj = lex:child as Subject, 
     propObj  = lex:place as PrepositionalObject("in")),
  ConsequenceVerb("bear",lex:birthCountry,
     propSubj = lex:child as Subject, 
     propObj  = lex:country as PrepositionalObject("in")),

  ConsequenceVerb("bear",dbpedia:stateOfOrigin,
     propSubj = lex:child as Subject, 
     propObj  = lex:state as PrepositionalObject("in")),
  StateVerb("come",dbpedia:stateOfOrigin,
     propObj  = PrepositionalObject("from")),

  RelationalNoun(["birth"/noun "place"/noun],dbpedia:birthPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  
  RelationalNoun(["place"/noun "of"/preposition "birth"/noun],dbpedia:birthPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "places of birth",

  // deathDate, deathYear, deathPlace, restingPLace

  RelationalNoun(["death"/noun "date"/noun],dbpedia:deathDate,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  

  StateVerb("die",dbpedia:deathDate,
     propObj = PrepositionalObject("on")),
  StateVerb("die",dbpedia:deathYear,
     propObj = PrepositionalObject("in")),
  StateVerb("die",dbpedia:deathPlace,
     propObj = PrepositionalObject("in")),

  RelationalNoun(["death"/noun "place"/noun],dbpedia:deathPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun(["place"/noun "of"/preposition "death"/noun],dbpedia:deathPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "places of death",

  RelationalNoun(["resting"/noun "place"/noun],dbpedia:restingPlace,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalAdjective("buried",dbpedia:restingPlace,
     relationalArg = PrepositionalObject("in")),

  // gender 

  IntersectiveObjectPropertyAdjective("female",dbpedia:gender,resource:Female),
  IntersectiveObjectPropertyAdjective("male",dbpedia:gender,resource:Male),

  // child, parent

  RelationalNoun("child",dbpedia:child,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "children", 
  RelationalNoun("parent",dbpedia:child,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("parent",dbpedia:parent,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun("child",dbpedia:parent,
     propObj  = PossessiveAdjunct) with plural "children", 

  RelationalNoun("daugther",dbpedia:child,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Female), 
  RelationalNoun("daugther",dbpedia:parent,
     propSubj = CopulativeArg restrictedTo lex:Female,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("son",dbpedia:child,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Male), 
  RelationalNoun("son",dbpedia:parent,
     propSubj = CopulativeArg restrictedTo lex:Male,
     propObj  = PossessiveAdjunct), 

  RelationalNoun("mother",dbpedia:child,
     propSubj = CopulativeArg restrictedTo lex:Female,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("mother",dbpedia:parent,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Female), 
  RelationalNoun("father",dbpedia:child,
     propSubj = CopulativeArg restrictedTo lex:Male,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("father",dbpedia:parent,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Male), 

  RelationalNoun("grandmother",lex:grandchild,
     propSubj = CopulativeArg restrictedTo lex:Female,
     propObj  = PossessiveAdjunct), 
  RelationalNoun("grandfather",lex:grandchild,
     propSubj = CopulativeArg restrictedTo lex:Male,
     propObj  = PossessiveAdjunct), 

  RelationalNoun("grandchild",lex:grandchild,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg) with plural "grandchildren", 
  RelationalNoun("granddaughter",lex:grandchild,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Female), 
  RelationalNoun("grandson",lex:grandchild,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo lex:Male), 


  // spouse

  RelationalNoun("spouse",dbpedia:spouse,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),  
  RelationalNoun("wife",dbpedia:spouse,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun("husband",dbpedia:spouse,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("marry",dbpedia:spouse),

  ConsequenceVerb("marry",dbpedia:spouse,
     propSubj = lex:partner1 as Subject, 
     propObj  = lex:partner2 as PrepositionalObject("to")),


  // influenced 

  StateVerb("influence",dbpedia:influenced),
  StateVerb("influence",dbpedia:influencedBy,
     propSubj = DirectObject,
     propObj  = Subject),


  // successor, predecessor

  RelationalNoun("successor",dbpedia:successor,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),
  StateVerb("succeed",dbpedia:successor,
     propSubj = DirectObject,
     propObj  = Subject),
  StateVerb("preceed",dbpedia:successor),
  RelationalNoun("predecessor",dbpedia:successor,
     propObj = PossessiveAdjunct),

  RelationalNoun("predecessor",dbpedia:predecessor,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),
  StateVerb("preceed",dbpedia:predecessor,
     propSubj = DirectObject,
     propObj  = Subject),
  StateVerb("succeed",dbpedia:predecessor),
  RelationalNoun("successor",dbpedia:predecessor,
     propObj = PossessiveAdjunct),


  // ethnicity, religion 

  RelationalNoun("ethnicity",dbpedia:ethnicity,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),   

  RelationalNoun("religion",dbpedia:religion,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),


  // university, almaMater 

  RelationalNoun("university",dbpedia:university,
     propSubj=PossessiveAdjunct,
     propObj=CopulativeArg), 
  RelationalNoun(["Alma"/adjective "Mater"/noun],dbpedia:almaMater,
     propSubj=PossessiveAdjunct,
     propObj=CopulativeArg),

  StateVerb("study",dbpedia:university,
     propObj = PrepositionalObject("at")),
  StateVerb("study",dbpedia:almaMater,
     propObj = PrepositionalObject("at")),
  StateVerb("graduate",dbpedia:almaMater,
     propObj = PrepositionalObject("from")),

  // field 

  RelationalNoun("field",dbpedia:field,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("work",dbpedia:field,
     propObj = PrepositionalObject("on")),


  // profession, occupation 

  RelationalNoun("profession",dbpedia:profession,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun("occupation",dbpedia:occupation,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("work",dbpedia:profession,
     propObj = PrepositionalObject("as")),
  StateVerb("work",dbpedia:occupation,
     propObj = PrepositionalObject("as")),


  // rector

  RelationalNoun("rector",dbpedia:rector,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun("principal",dbpedia:rector,
     propSubj = PossessiveAdjunct restrictedTo dbpedia:School,
     propObj  = CopulativeArg), 


  // canonizedPlace 

  ConsequenceVerb("canonize",dbpedia:canonizedPlace,
     propSubj=lex:person as Subject, 
     propObj=lex:place as PrepositionalObject("in")),

  // patron 

  RelationalNoun("patron",dbpedia:patron,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 
  RelationalNoun(["patron"/noun "saint"/noun],dbpedia:patron,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 


  // hometown, nationality 

  RelationalNoun(["home"/noun "town"/noun],dbpedia:hometown,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun(["home"/noun "country"/noun],dbpedia:nationality,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg restrictedTo dbpedia:Country ), 

  StateVerb("come",dbpedia:hometown,
     propObj = PrepositionalObject("from")),
  StateVerb("come",dbpedia:nationality,
     propObj = PrepositionalObject("from") restrictedTo dbpedia:Place),


  // birthName, formerName, commonName, pseudonym, alias

  RelationalNoun(["birth"/noun "name"/noun],dbpedia:birthName,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun(["former"/adjective "name"/noun],dbpedia:formerName,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun(["common"/adjective "name"/noun],dbpedia:commonName,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  RelationalNoun("pseudonym",dbpedia:pseudonym,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),

  RelationalNoun("alias",dbpedia:alias,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg),

  RelationalAdjective("called",dbpedia:pseudonym,
     relationalArg = DirectObject), 
  RelationalAdjective("called",dbpedia:alias,
     relationalArg = DirectObject), 
  RelationalAdjective("called",dbpedia:commonName,
     relationalArg = DirectObject), 


  // weight 

  RelationalNoun("weight",dbpedia:weight,
     propSubj = PossessiveAdjunct,
     propObj  = CopulativeArg), 

  StateVerb("weigh",dbpedia:weight)

)
