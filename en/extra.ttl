@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix lexinfo: <http://www.lexinfo.net/ontology/2.0/lexinfo#> .
@prefix lemon: <http://www.monnet-project.eu/lemon#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: < http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://github.com/cunger/lemon.dbpedia/target/dbpedia_en#> .


:lexicon a lemon:Lexicon ;
    lemon:language "en" ;
    lemon:entry :people,
                :high,
                :long,
                :tall,
                :athletics,
                :Olympics,
                :OlympicGames,
                :record,
                :interpreter,
                :discover,
                :discovery,
                :haveInhabitants,
                :haveMusicBy,
                :writeTheMusicFor .


## Person ##

:people a lemon:LexicalEntry ;
  lexinfo:partOfSpeech lexinfo:noun ;
  lemon:canonicalForm [ lemon:writtenRep "people"@en ; 
                        lexinfo:number lexinfo:plural ] ;
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/Person> ] .


## height, length ## 

:high a lemon:lexicalEntry ;
  lexinfo:partOfSpeech lexinfo:adjective ;
  lemon:canonicalForm [ lemon:writtenRep "high"@en ] ;
  lemon:synBehavior [ rdf:type lexinfo:AdjectiveScaleFrame ;
                      lexinfo:copulativeSubject   :arg1high ;
                      lexinfo:adverbialComplement :arg2high ];
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/height> ;
                lemon:subjOfProp :arg1high ;
                lemon:objOfProp  :arg2high ] .

:long a lemon:lexicalEntry ;
  lexinfo:partOfSpeech lexinfo:adjective ;
  lemon:canonicalForm [ lemon:writtenRep "long"@en ] ;
  lemon:synBehavior [ rdf:type lexinfo:AdjectiveScaleFrame ;
                      lexinfo:copulativeSubject   :arg1long ;
                      lexinfo:adverbialComplement :arg2long ];
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/length> ;
                lemon:subjOfProp :arg1long ;
                lemon:objOfProp  :arg2long ] .


## Sport ##

:athletics a lemon:LexicalEntry ;
  lexinfo:partOfSpeech lexinfo:noun ;
  lemon:canonicalForm [ lemon:writtenRep "athletics"@en ; 
                        lexinfo:number lexinfo:plural ] ;
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/Sport> ] .

## Olympics ##

:Olympics a lemon:LexicalEntry ;
  lexinfo:partOfSpeech lexinfo:noun ;
  lemon:canonicalForm [ lemon:writtenRep "olympics"@en ; 
                        lexinfo:number lexinfo:plural ] ;
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/Olympics> ] .

:OlympicGames a lemon:LexicalEntry ;
  lexinfo:partOfSpeech lexinfo:noun ;
  lemon:canonicalForm [ lemon:writtenRep "Olympic Games"@en ; 
                        lexinfo:number lexinfo:plural ] ;
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/Olympics> ] .

## artist ## 

:record a lemon:LexicalEntry ;
  lexinfo:partOfSpeech lexinfo:verb ;
  lemon:canonicalForm [ lemon:writtenRep "record"@en ] ;
  lemon:synBehavior [ rdf:type lexinfo:TransitiveFrame ;
                      lexinfo:subject :arg1record ;
                      lexinfo:directObject :arg2record ; ] ;
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/artist>;
                lemon:subjOfProp :arg2record;
                lemon:objOfProp  :arg1record;
                lemon:propertyDomain [ owl:unionOf (<http://dbpedia.org/ontology/Album> <http://dbpedia.org/ontology/Song>) ] ] .

:interpreter a lemon:LexicalEntry ;
  lexinfo:partOfSpeech lexinfo:noun ;
  lemon:canonicalForm [ lemon:writtenRep "interpreter"@en ] ;
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/artist> ;
                lemon:subjOfProp :arg1interpreter ;
                lemon:objOfProp  :arg2interpreter ] ;
  lemon:synBehavior [ rdf:type lexinfo:NounPPFrame ;
                      lexinfo:copulativeArg :arg2interpreter ;
                      lexinfo:prepositionalObject :arg1interpreter ] .
:arg1interpreter lemon:marker :of .

:haveInfluenceOn a lemon:LexicalEntry ;
  lemon:decomposition ( :have :influence );
  lemon:phraseRoot [ 
        :root  [ lemon:leaf :have ;
                 :nsubj [ lemon:leaf :arg1haveInfluence ] ;
                 :dobj  [ lemon:leaf :influence ; 
                          :prep [ lemon:leaf :on ;
                                  :pobj [ lemon:leaf :arg2haveInfluence ] ] ] ] ] ; 
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/influenced> ;
                lemon:subjOfProp :arg1haveInfluence ;
                lemon:objOfProp  :arg2haveInfluence ] .

:have a lemon:LexicalEntry ;
  lemon:canonicalForm [ lemon:writtenRep "have"@en ] ;
  lexinfo:partOfSpeech lexinfo:verb .

:influence a lemon:LexicalEntry ;
  lemon:canonicalForm [ lemon:writtenRep "influence"@en ] ;
  lexinfo:partOfSpeech lexinfo:noun .


## discover, discoverer ##

:discover a lemon:LexicalEntry ;
  lemon:canonicalForm [ lemon:writtenRep "discover"@en ] ;
  lemon:synBehavior [ rdf:type lexinfo:TransitivePPFrame ;
		      lexinfo:subject      :arg1discover ;
                      lexinfo:directObject :arg2discover ;
                      lexinfo:prepositionalAdjunct :arg3discover ] ;
  lemon:sense [ lemon:subsense [ lemon:reference <http://dbpedia.org/ontology/discoverer>;
                                 lemon:subjOfProp :arg2discover;
                                 lemon:objOfProp  :arg1discover ] ,
                               [ lemon:reference <http://dbpedia.org/ontology/discovered>;
                                 lemon:subjOfProp :arg2discover;
                                 lemon:objOfProp  :arg3discover ] ];
  lexinfo:partOfSpeech lexinfo:verb .
:arg3discover lemon:marker :on .
:arg3discover lemon:optional "true"^^xsd:boolean .

:discovery a lemon:LexicalEntry ;
  lemon:canonicalForm [ lemon:writtenRep "discovery"@en ] ;
  lemon:synBehavior [ rdf:type lexinfo:NounPPFrame ;
		      lexinfo:subject :discovery ;
                      lexinfo:prepositionalObject  :arg1discovery ;
                      lexinfo:prepositionalAdjunct :arg2discovery ;
                      lexinfo:prepositionalAdjunct :arg3discovery ] ;
  lemon:sense [ lemon:subsense [ lemon:reference <http://dbpedia.org/ontology/discoverer>;
                                 lemon:subjOfProp :arg1discover;
                                 lemon:objOfProp  :arg2discover ] ,
                               [ lemon:reference <http://dbpedia.org/ontology/discovered>;
                                 lemon:subjOfProp :arg1discover;
                                 lemon:objOfProp  :arg3discover ] ];
  lexinfo:partOfSpeech lexinfo:verb .
:arg1discovery lemon:marker :of .
:arg2discovery lemon:marker :by .
:arg2discovery lemon:optional "true"^^xsd:boolean .
:arg3discovery lemon:marker :on .
:arg3discovery lemon:optional "true"^^xsd:boolean .


## totalPopulation ##

:haveInhabitant a lemon:LexicalEntry ;
  lemon:phraseRoot [ 
        :root  [ lemon:leaf :have ;
                 :nsubj [ lemon:leaf :arg1haveInhabitant ] ;
                 :dobj  [ lemon:leaf :inhabitant ; 
                          :num [ lemon:leaf :arg2haveInhabitant ] ] ] ] ; 
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/populationTotal> ;
                lemon:subjOfProp :arg1haveInhabitant ;
                lemon:objOfProp  :arg2haveInhabitant ] .

:have a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "have"@en ] ;
  lexinfo:partOfSpeech lexinfo:verb .

:inhabitant a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "inhabitant"@en ] ;
  lexinfo:partOfSpeech lexinfo:noun .


## musicBy ##

:haveMusicBy a lemon:LexicalEntry ;
  lemon:decomposition ( :have :music :by ) ;
  lemon:phraseRoot [ 
        :root  [ lemon:leaf :have ;
                 :nsubj [ lemon:leaf :arg1haveMusicBy ] ;
                 :dobj  [ lemon:leaf :music ; 
                          :prep [ lemon:leaf :by ;
                                  :pobj [ lemon:leaf :arg2haveMusicBy ] ] ] ] ] ; 
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/musicBy>;
                lemon:subjOfProp :arg1haveMusicBy;
                lemon:objOfProp  :arg2haveMusicBy ] .

:writeTheMusicFor a lemon:LexicalEntry ;
  lemon:decomposition ( :write :the :music :for );
  lemon:phraseRoot [ 
        :root  [ lemon:leaf :write ;
                 :nsubj [ lemon:leaf :arg2writeTheMusicFor ] ;
                 :dobj  [ lemon:leaf :music ; 
                          :det [ lemon:leaf :the ] ] ;
                 :prep  [ lemon:leaf :for ;
                          :pobj [ lemon:leaf :arg1writeTheMusicFor ] ] ] ] ; 
  lemon:sense [ lemon:reference <http://dbpedia.org/ontology/musicBy> ;
                lemon:subjOfProp :arg1writeTheMusicFor ;
                lemon:objOfProp  :arg2writeTheMusicFor ] .

:write a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "write"@en ] ;
  lexinfo:partOfSpeech lexinfo:verb .

:have a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "have"@en ] ;
  lexinfo:partOfSpeech lexinfo:verb .

:the a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "the"@en ] ;
  lexinfo:partOfSpeech lexinfo:article .

:music a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "music"@en ] ;
  lexinfo:partOfSpeech lexinfo:noun .

:for a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "for"@en ] ;
  lexinfo:partOfSpeech lexinfo:preposition .

:by a lemon:Word ;
  lemon:canonicalForm [ lemon:writtenRep "by"@en ] ;
  lexinfo:partOfSpeech lexinfo:preposition .



#### Subproperties ####

:root  rdfs:subPropertyOf lemon:edge .
:nsubj rdfs:subPropertyOf lemon:edge .
:dobj  rdfs:subPropertyOf lemon:edge .
:pobj  rdfs:subPropertyOf lemon:edge .
:prep  rdfs:subPropertyOf lemon:edge .
:det   rdfs:subPropertyOf lemon:edge .
:num   rdfs:subPropertyOf lemon:edge .


#### Marker ####

:in   lemon:canonicalForm [ lemon:writtenRep "in"@en ] .
:on   lemon:canonicalForm [ lemon:writtenRep "on"@en ] .
:of   lemon:canonicalForm [ lemon:writtenRep "of"@en ] .
:to   lemon:canonicalForm [ lemon:writtenRep "to"@en ] .
:into lemon:canonicalForm [ lemon:writtenRep "into"@en ] .
:from lemon:canonicalForm [ lemon:writtenRep "from"@en ] .

